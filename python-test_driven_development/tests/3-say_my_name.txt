The ``3-say_my_name`` module
===============================
``say_my_name(first_name, last_name)`` prints a given first name
and last name in a string: "My name is <first name> <last name>"
first_name and last_name must be strings. last_name is an empty string
by default.

Using ``say_my_name``
-----------------------

First import the function ``say_my_name`` from the module ``3-say_my_name``
    >>> say_my_name = __import__('3-say_my_name').say_my_name

Test cases:

    Regular strings:
        >>> say_my_name("Michael", "Scott")
        My name is Michael Scott
    
    One argument:
        >>> say_my_name("Jim")
        My name is Jim 
    
    Wrong type for first_name:
        >>> say_my_name(7, "Halpert")
        Traceback (most recent call last):
        ...
        TypeError: first_name must be a string

    Wrong type for last_name:
        >>> say_my_name("Pam", 8)
        Traceback (most recent call last):
        ...
        TypeError: last_name must be a string
    
    No arguments:
        >>> say_my_name()
        Traceback (most recent call last):
        TypeError: say_my_name() missing 1 required positional argument: 'first_name'

    More than 2 arguments:
        >>> say_my_name("Dwight", "Kurt", "Schrute")
        Traceback (most recent call last):
        ...
        TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given






    